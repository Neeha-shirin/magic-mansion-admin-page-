# Generated by Django 5.0.3 on 2025-07-17 10:12

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=False)),
                ('img', models.ImageField(upload_to='banner')),
                ('status', models.CharField(choices=[('publish', 'Publish'), ('draft', 'Draft')], max_length=100)),
                ('add_to_homepage', models.BooleanField(default=False)),
                ('reorder', models.PositiveIntegerField(default=0)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Builder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('logo', models.ImageField(upload_to='img_logo')),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=False)),
                ('add_to_homepage', models.BooleanField(default=False)),
                ('reorder', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phonenumber', models.PositiveIntegerField(blank=True, null=True)),
                ('role', models.CharField(choices=[('property', 'property'), ('blog', 'blog')], max_length=80)),
                ('is_active', models.BooleanField(choices=[(True, 'Active'), (False, 'Inactive')], default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlogGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='blog_gallery')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.blog')),
            ],
        ),
        migrations.CreateModel(
            name='BuilderLogos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='builder_logos')),
                ('builder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.builder')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(max_length=255)),
                ('property_address', models.TextField()),
                ('property_description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('bedrooms', models.PositiveIntegerField()),
                ('bathrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('min_sqft', models.PositiveIntegerField()),
                ('max_sqft', models.PositiveIntegerField()),
                ('location', models.CharField(max_length=255)),
                ('amenities', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='active', max_length=10)),
                ('addToHomepage', models.BooleanField(default=False)),
                ('displayOrder', models.PositiveIntegerField(blank=True, null=True)),
                ('floorplanPDF', models.FileField(blank=True, null=True, upload_to='floorplans/')),
                ('brochurePDF', models.FileField(blank=True, null=True, upload_to='brochures/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('builder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.builder')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.community')),
                ('information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.information')),
                ('property_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='realestate_app.propertytype')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='realestate_app.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='img/')),
                ('propertyimage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate_app.propertyimage')),
            ],
        ),
    ]
